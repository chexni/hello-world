install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(data=mydata,
aes(x=carat,y=price))
ggplot(data=mydata,
aes(x=carat,y=price)) + geom_point()
ggplot(data=mydata,
aes(x=carat,y=price),colour=clarity)
+ geom_point()
ggplot(data=mydata,
aes(x=carat,y=price),colour=clarity)) +
geom_point()
ggplot(data=mydata,
aes(x=carat,y=price,colour=clarity)) +
geom_point(alpha=0.1)
ggplot(data=mydata[mydata$carat<2.5],
aes(x=carat,y=price,colour=clarity)) +
geom_point(alpha=0.1) +
geom_smooth()
ggplot(data=mydata[mydata$carat<2.5],
aes(x=carat,y=price,colour=clarity)) +
geom_point(alpha=0.1) +
geom_smooth()
ggplot(data=mydata[mydata$carat<2.5,],
aes(x=carat,y=price,colour=clarity)) +
geom_point(alpha=0.1) +
geom_smooth()
ggplot(data=mydata[mydata$carat<2.5,],
aes(x=carat, y=price, colour=clarity)) +
geom_point(alpha=0.1) +
geom_smooth()
View(mydata)
View(mydata)
for(i in 1:5){
print("Hello R")
}
1:5
for(i in 2:5){
print("Hello R")
}
for(i in 2:5){
i <- i+1
}
for(i in 2:5){
i <- i+1
print(i)
}
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
rm(answer)
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
answer <- "Less than 1"
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
answer <- "Less than 1"
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
answer <- "Less than 1"
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
answer <- "Less than 1"
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
rm(answer)
x <- rnorm(1)
if(x>1){
answer <- "Greater than 1"
} else {
if(x >= -1){
answer <- "Between -1 and 1"
} else {
answer <- "Less than -1"
}
}
N <- 100
counter <-
for(i in rnorm(100)){
if(i<1 & i>-1){
counter <- counter +1
}
}
answer <- counter/N
answer
N <- 100
counter <- 0
for(i in rnorm(100)){
if(i<1 & i>-1){
counter <- counter +1
}
}
answer <- counter/N
answer
N <- 10000
counter <- 0
for(i in rnorm(100)){
if(i<1 & i>-1){
counter <- counter +1
}
}
answer <- counter/N
answer
N <- 1000
counter <- 0
for(i in rnorm(100)){
if(i<1 & i>-1){
counter <- counter +1
}
}
answer <- counter/N
answer
N <- 2000
counter <- 0
for(i in rnorm(100)){
if(i<1 & i>-1){
counter <- counter +1
}
}
answer <- counter/N
answer
N <- 2000
counter <- 0
for(i in rnorm(N)){
if(i<1 & i>-1){
counter <- counter +1
}
}
answer <- counter/N
answer
N <- 10000
counter <- 0
for(i in rnorm(N)){
if(i<1 & i>-1){
counter <- counter +1
}
}
answer <- counter/N
answer
x <- c(1,12,13,4)
y <- seq(201,500,2)
z <- rep("Hi!",4)
x <- c(1,12,13,4)
y <- seq(201,500,2)
z <- rep("Hi!",4)
x
y
z
w <- c("a","b","c")
w[1]
w[-1]
w[-2]
2[-1:-3]
w[-1:-3]
w[4]
clear
A <- (1,2,3)
x<- rnorm(5)
x
for (i in x){
print(i)
}
print(x[1])
for (j=1:5) {
print(x[j])
}
for (j in 1:5) {
print(x[j])
}
N <- 100
a <- rnorm(N)
b <- rnorm(N)
N <- 100
a <- rnorm(N)
b <- rnorm(N)
c <- a*b
d <- rep(NA,N)
for(i in 1:N){
d[i] = a[i]*b[i]
}
?rnorm()
?paste()
paste(x,sep="")
paste("a","b",sep="")
paste("a","b")
paste("a","b",collapse=NULL)
paste("a","b",sep="",collapse=NULL)
paste("a","b",sep="",collapse=2)
paste("a","b",sep="",collapse="2")
paste("a","b",collapse="2")
paste("1st", "2nd", "3rd", sep = ", ")
paste("1st", "2nd", "3rd", collapse = ", ")
paste0("1st", "2nd", "3rd", collapse = ", ")
paste0("1st", "2nd", "3rd")
paste0("1st", "2nd", "3rd", sep = ", ")
paste0("1st", "2nd", "3rd", sep = ", ")
paste("1st", "2nd", "3rd", sep = ", ")
paste0("1st", "2nd", "3rd")
paste("1st", "2nd", "3rd", sep = "")
x=["a","b","c"]
x=c("a","b","c")
x
paste(x)
paste(x,sep="")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:ggplot2", unload=TRUE)
library(ggplot2)
sysinf()
Sys.info()
setwd(getwd())
getwd()
temp <- tempfile()
download.file("http://www.ssa.gov/oact/babynames/state/namesbystate.zip",temp)
#1.2 Unzip files and extract all state files
fname = unzip(temp, list=TRUE)
unzip(temp, files=fname$Name, exdir="babynames", overwrite=TRUE)
file_list <- list.files(path="babynames", pattern ="*.TXT", full.names=TRUE)
data <- ldply(file_list,read.table,header=FALSE,sep=",")
names(data)= c("State","Sex","Birth","Name","Freq")
rm(file_list,temp,zip,fname)
data <- ldply(file_list,read.table,header=FALSE,sep=",")
library(ldply)
install.packages(ldply)
install.packages(dply)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
data <- ldply(file_list,read.table,header=FALSE,sep=",")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
data <- ldply(file_list,read.table,header=FALSE,sep=",")
fname = unzip(temp, list=TRUE)
unzip(temp, files=fname$Name, exdir="babies", overwrite=TRUE)
file_list <- list.files(path="babies", pattern ="*.TXT", full.names=TRUE)
fname = unzip(temp, list=TRUE)
unzip(temp, files=fname$Name, exdir="babynames", overwrite=TRUE)
file_list <- list.files(path="babynames", pattern ="*.TXT", full.names=TRUE)
temp <- tempfile()
download.file("http://www.ssa.gov/oact/babynames/state/namesbystate.zip",temp)
unzip(temp, files=fname$Name, exdir="babynames", overwrite=TRUE)
fname = unzip(temp, list=TRUE)
unzip(temp, files=fname$Name, exdir="babynames", overwrite=TRUE)
file_list <- list.files(path="babynames", pattern ="*.TXT", full.names=TRUE)
data <- ldply(file_list,read.table,header=FALSE,sep=",")
install.packages('readxl')
library(dplyr)
head(mtcars)
select(mtcars,mtcars$mpg > 20 & mtcars$mpg <6)
select(mtcars,mtcars$mpg > 20 & mtcars$cyl <6)
select(mtcars,mtcars$mpg > 20 & mtcars$cyl ==6)
select(mtcars,mtcars$mpg > 20 , mtcars$cyl ==6)
filter(mtcars,mpg>20,cyl==6)
order(mtcars, cyl, wt)
order(mtcars,cly,desc(wt))
arrange(mtcars,cly,desc(wt))
order(mtcars,cyl,desc(wt))
arrange(mtcars,cyl,desc(wt))
install.packages('ggplot2')
install.packages('ggplot2movies')
library(ggplot2)
library(ggplot2movies)
# data & aesthetics
pl <- ggplot(movies,aes(x=rating))
# geometry
pl + geom_histogram()
library(ggplot2)
library(ggthemes)
head(mpg)
detach("package:ggplot2movies", unload=TRUE)
ggplot(data=mpg, aes(x=hwy, y=count))+geom_histogram()
ggplot(data=mpg, aes(x=hwy))+geom_histogram()
library(ggplot2)
ggplot(data=mpg, aes(x=hwy))+geom_histogram(color='red', alpha=0.4)
ggplot(data=mpg, aes(x=hwy))+geom_histogram(fill='red', alpha=0.4)
ggplot(mpg, aes(x=manufacturer))+geom_bar(aes(fill=cyl))
ggplot(mpg, aes(x=manufacturer))+geom_bar(aes(fill=factor(cyl)))
head(txhousing)
ggplot(txhousing, aes(x=sales,y=volume)) + geom_point()
ggplot(txhousing, aes(x=sales,y=volume)) + geom_point(color='blue',alpha=0.4)
ggplot(txhousing, aes(x=sales,y=volume)) + geom_smooth(color='blue',alpha=0.4)
ggplot(txhousing, aes(x=sales,y=volume)) + geom_point(color='blue',alpha=0.4) + geom_smooth()
ggplot(txhousing, aes(x=sales,y=volume)) + geom_point(color='blue',alpha=0.4) + geom_smooth(color='red')
install.packages(wordbankr)
install.packages(wordbankr)
install.packages("wordbankr")
english_ws_admins <- get_administration_data("English","WS")
library(wordbankr)
english_ws_admins <- get_administration_data("English","WS")
View(english_ws_admins)
all_admins <- get_administration_data()
View(all_admins)
View(all_admins)
spanish_wg_items <- get_item_data("Spanish","WG")
all_items <- get_item_data()
eng_ws_canines <- get_instrument_data(instrument_language = "English",
instrument_form = "WS",
items = c("item_26", "item_46"))
